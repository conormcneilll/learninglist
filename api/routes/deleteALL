const express = require("express");
const router = express.Router();
const connection = require("../connection.js");

// Route to delete user account
router.delete('/', (req, res) => {
    const user_id = req.session.user_id;

    if (!user_id) {
        return res.status(401).json({ badstuff: "User not logged in" });
    }

    // Delete user from the database
    const deleteUserQuery = `DELETE FROM users WHERE user_id = ?`;
    // Delete user's learnlists from the database
    const deleteLearnlistsQuery = `DELETE FROM LearnList WHERE creator_id = ?`;
    // Delete user's favourites from the database
    const deleteFavouritesQuery = `DELETE FROM FavouriteLearnlist WHERE user_id = ?`;

    connection.beginTransaction(err => {
        if (err) {
            return res.status(500).json({ badstuff: "Failed to start transaction" });
        }

        // Delete favourites
        connection.query(deleteFavouritesQuery, [user_id], (err, results) => {
            if (err) {
                return connection.rollback(() => {
                    res.status(500).json({ badstuff: "Failed to delete user's favourites" });
                });
            }

            // Delete learnlists
            connection.query(deleteLearnlistsQuery, [user_id], (err, results) => {
                if (err) {
                    return connection.rollback(() => {
                        res.status(500).json({ badstuff: "Failed to delete user's learnlists" });
                    });
                }

                // Delete user
                connection.query(deleteUserQuery, [user_id], (err, results) => {
                    if (err) {
                        return connection.rollback(() => {
                            res.status(500).json({ badstuff: "Failed to delete user account" });
                        });
                    }

                    connection.commit(err => {
                        if (err) {
                            return connection.rollback(() => {
                                res.status(500).json({ badstuff: "Failed to commit transaction" });
                            });
                        }

                        // Destroy the session
                        req.session.destroy(err => {
                            if (err) {
                                return res.status(500).json({ badstuff: "Failed to destroy session" });
                            }

                            res.json({ goodstuff: "User account deleted successfully" });
                        });
                    });
                });
            });
        });
    });
});

module.exports = router;
